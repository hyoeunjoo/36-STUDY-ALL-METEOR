import java.util.*;

public class Solution {
    public int solution(int[][] board, int[] moves) {
        int n = board.length;
        int answer = 0;

        // 1. column 별 스택 만들기
        Stack<Integer>[] columns = new Stack[n];
        for (int i = 0; i < n; i++) {
            columns[i] = new Stack<>();
            for (int j = n - 1; j >= 0; j--) {
                if (board[j][i] != 0) {
                    columns[i].push(board[j][i]);
                }
            }
        }

        // 2. 뽑은 인형들을 저장할 answer 스택
        Stack<Integer> basket = new Stack<>();

        // 3. moves 순회
        for (int move : moves) {
            int col = move - 1; // 0-based index

            if (!columns[col].isEmpty()) {
                int doll = columns[col].pop();

                if (!basket.isEmpty() && basket.peek() == doll) {
                    basket.pop(); // 짝이면 제거
                    answer += 2;
                } else {
                    basket.push(doll);
                }
            }
        }

        return answer;
    }
}
